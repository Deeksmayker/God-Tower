
// Compiled shader for Windows, Mac, Linux

//////////////////////////////////////////////////////////////////////////
// 
// NOTE: This is *not* a valid shader file, the contents are provided just
// for information and for debugging purposes only.
// 
//////////////////////////////////////////////////////////////////////////
// Skipping shader variants that would not be included into build of current scene.

Shader "Hidden/Custom/GodBloomBase" {
SubShader { 
 LOD 100
 Tags { "RenderType"="Opaque" "RenderPipeline"="UniversalPipeline" }


 // Stats for Vertex shader:
 //        d3d11: 6 math
 // Stats for Fragment shader:
 //        d3d11: 33 avg math (15..51)
 Pass {
  Name "Bloom Prefilter"
  Tags { "RenderType"="Opaque" "RenderPipeline"="UniversalPipeline" }
  ZTest Always
  ZWrite Off
  Cull Off
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 6 math, 1 temp registers
Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector4 _BlitScaleBias at 2032
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[128], immediateIndexed
      dcl_input_sgv v0.x, vertex_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_temps 1
   0: ishl r0.x, v0.x, l(1)
   1: and r0.x, r0.x, l(2)
   2: and r0.w, v0.x, l(2)
   3: utof r0.xy, r0.xwxx
   4: mad o0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: add r0.z, -r0.y, l(1.000000)
   6: mad o1.xy, r0.xzxx, cb0[127].xyxx, cb0[127].zwzz
   7: mov o0.zw, l(0,0,1.000000,1.000000)
   8: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 15 math, 2 temp registers
Set 2D Texture "_BlitTexture" to slot 0 sampler slot -1

Set Sampler LinearClamp to slot 0

Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector2 _GlobalMipBias at 80
  Vector4 _Params at 2144
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[135], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 2
   0: add r0.x, cb0[134].w, cb0[134].w
   1: sample_b r1.xyzw, v1.xyxx, t0.xyzw, s0, cb0[5].x
   2: min r0.yzw, r1.xxyz, cb0[134].yyyy
   3: max r1.x, r0.z, r0.y
   4: max r1.x, r0.w, r1.x
   5: add r1.y, r1.x, -cb0[134].z
   6: add r1.z, r1.y, cb0[134].w
   7: max r1.xz, r1.xxzx, l(0.000100, 0.000000, 0.000000, 0.000000)
   8: min r0.x, r0.x, r1.z
   9: mul r0.x, r0.x, r0.x
  10: mad r1.z, cb0[134].w, l(4.000000), l(0.000100)
  11: div r0.x, r0.x, r1.z
  12: max r0.x, r0.x, r1.y
  13: div r0.x, r0.x, r1.x
  14: mul r0.xyz, r0.xxxx, r0.yzwy
  15: max o0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  16: mov o0.w, l(1.000000)
  17: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: _BLOOM_HQ
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 6 math, 1 temp registers
Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector4 _BlitScaleBias at 2032
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[128], immediateIndexed
      dcl_input_sgv v0.x, vertex_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_temps 1
   0: ishl r0.x, v0.x, l(1)
   1: and r0.x, r0.x, l(2)
   2: and r0.w, v0.x, l(2)
   3: utof r0.xy, r0.xwxx
   4: mad o0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: add r0.z, -r0.y, l(1.000000)
   6: mad o1.xy, r0.xzxx, cb0[127].xyxx, cb0[127].zwzz
   7: mov o0.zw, l(0,0,1.000000,1.000000)
   8: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 7 temp registers
Set 2D Texture "_BlitTexture" to slot 0 sampler slot -1

Set Sampler LinearClamp to slot 0

Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector2 _GlobalMipBias at 80
  Vector4 _BlitTexture_TexelSize at 2112
  Vector4 _Params at 2144
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[135], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xyzw, cb0[132].xxxx, l(-0.500000, -0.500000, 0.500000, -0.500000), v1.xyxy
   1: sample_b r1.xyzw, r0.xyxx, t0.xyzw, s0, cb0[5].x
   2: sample_b r0.xyzw, r0.zwzz, t0.xyzw, s0, cb0[5].x
   3: add r0.xyz, r0.xyzx, r1.xyzx
   4: mad r1.xyzw, cb0[132].xxxx, l(-0.500000, 0.500000, 0.500000, 0.500000), v1.xyxy
   5: sample_b r2.xyzw, r1.xyxx, t0.xyzw, s0, cb0[5].x
   6: sample_b r1.xyzw, r1.zwzz, t0.xyzw, s0, cb0[5].x
   7: add r0.xyz, r0.xyzx, r2.xyzx
   8: add r0.xyz, r1.xyzx, r0.xyzx
   9: add r1.xy, v1.xyxx, -cb0[132].xxxx
  10: sample_b r1.xyzw, r1.xyxx, t0.xyzw, s0, cb0[5].x
  11: mad r2.xyzw, cb0[132].xxxx, l(0.000000, -1.000000, 1.000000, -1.000000), v1.xyxy
  12: sample_b r3.xyzw, r2.xyxx, t0.xyzw, s0, cb0[5].x
  13: sample_b r2.xyzw, r2.zwzz, t0.xyzw, s0, cb0[5].x
  14: add r2.xyz, r2.xyzx, r3.xyzx
  15: add r1.xyz, r1.xyzx, r3.xyzx
  16: sample_b r3.xyzw, v1.xyxx, t0.xyzw, s0, cb0[5].x
  17: add r1.xyz, r1.xyzx, r3.xyzx
  18: mad r4.xyzw, cb0[132].xxxx, l(-1.000000, 0.000000, -1.000000, 1.000000), v1.xyxy
  19: sample_b r5.xyzw, r4.xyxx, t0.xyzw, s0, cb0[5].x
  20: sample_b r4.xyzw, r4.zwzz, t0.xyzw, s0, cb0[5].x
  21: add r1.xyz, r1.xyzx, r5.xyzx
  22: add r5.xyz, r3.xyzx, r5.xyzx
  23: mul r1.xyz, r1.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000)
  24: mad r0.xyz, r0.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000), r1.xyzx
  25: mad r1.xyzw, cb0[132].xxxx, l(1.000000, 0.000000, 0.000000, 1.000000), v1.xyxy
  26: sample_b r6.xyzw, r1.xyxx, t0.xyzw, s0, cb0[5].x
  27: sample_b r1.xyzw, r1.zwzz, t0.xyzw, s0, cb0[5].x
  28: add r2.xyz, r2.xyzx, r6.xyzx
  29: add r6.xyz, r3.xyzx, r6.xyzx
  30: add r2.xyz, r3.xyzx, r2.xyzx
  31: mad r0.xyz, r2.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000), r0.xyzx
  32: add r2.xyz, r1.xyzx, r5.xyzx
  33: add r2.xyz, r4.xyzx, r2.xyzx
  34: mad r0.xyz, r2.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000), r0.xyzx
  35: add r2.xy, v1.xyxx, cb0[132].xxxx
  36: sample_b r2.xyzw, r2.xyxx, t0.xyzw, s0, cb0[5].x
  37: add r2.xyz, r2.xyzx, r6.xyzx
  38: add r1.xyz, r1.xyzx, r2.xyzx
  39: mad r0.xyz, r1.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000), r0.xyzx
  40: min r0.xyz, r0.xyzx, cb0[134].yyyy
  41: max r0.w, r0.y, r0.x
  42: max r0.w, r0.z, r0.w
  43: add r1.x, r0.w, -cb0[134].z
  44: max r0.w, r0.w, l(0.000100)
  45: add r1.y, r1.x, cb0[134].w
  46: max r1.y, r1.y, l(0.000000)
  47: add r1.z, cb0[134].w, cb0[134].w
  48: min r1.y, r1.z, r1.y
  49: mul r1.y, r1.y, r1.y
  50: mad r1.z, cb0[134].w, l(4.000000), l(0.000100)
  51: div r1.y, r1.y, r1.z
  52: max r1.x, r1.y, r1.x
  53: div r0.w, r1.x, r0.w
  54: mul r0.xyz, r0.wwww, r0.xyzx
  55: max o0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: mov o0.w, l(1.000000)
  57: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: _USE_RGBM
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 6 math, 1 temp registers
Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector4 _BlitScaleBias at 2032
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[128], immediateIndexed
      dcl_input_sgv v0.x, vertex_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_temps 1
   0: ishl r0.x, v0.x, l(1)
   1: and r0.x, r0.x, l(2)
   2: and r0.w, v0.x, l(2)
   3: utof r0.xy, r0.xwxx
   4: mad o0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: add r0.z, -r0.y, l(1.000000)
   6: mad o1.xy, r0.xzxx, cb0[127].xyxx, cb0[127].zwzz
   7: mov o0.zw, l(0,0,1.000000,1.000000)
   8: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 23 math, 2 temp registers
Set 2D Texture "_BlitTexture" to slot 0 sampler slot -1

Set Sampler LinearClamp to slot 0

Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector2 _GlobalMipBias at 80
  Vector4 _Params at 2144
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[135], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 2
   0: add r0.x, cb0[134].w, cb0[134].w
   1: sample_b r1.xyzw, v1.xyxx, t0.xyzw, s0, cb0[5].x
   2: min r0.yzw, r1.xxyz, cb0[134].yyyy
   3: max r1.x, r0.z, r0.y
   4: max r1.x, r0.w, r1.x
   5: add r1.y, r1.x, -cb0[134].z
   6: add r1.z, r1.y, cb0[134].w
   7: max r1.xz, r1.xxzx, l(0.000100, 0.000000, 0.000000, 0.000000)
   8: min r0.x, r0.x, r1.z
   9: mul r0.x, r0.x, r0.x
  10: mad r1.z, cb0[134].w, l(4.000000), l(0.000100)
  11: div r0.x, r0.x, r1.z
  12: max r0.x, r0.x, r1.y
  13: div r0.x, r0.x, r1.x
  14: mul r0.xyz, r0.xxxx, r0.yzwy
  15: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  16: mul r0.xyz, r0.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000)
  17: max r0.w, r0.y, r0.x
  18: max r1.x, r0.z, l(0.000010)
  19: max r0.w, r0.w, r1.x
  20: mul r0.w, r0.w, l(255.000000)
  21: round_pi r0.w, r0.w
  22: mul r0.w, r0.w, l(0.003922)
  23: div o0.xyz, r0.xyzx, r0.wwww
  24: mov o0.w, r0.w
  25: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: _BLOOM_HQ _USE_RGBM
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 6 math, 1 temp registers
Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector4 _BlitScaleBias at 2032
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[128], immediateIndexed
      dcl_input_sgv v0.x, vertex_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_temps 1
   0: ishl r0.x, v0.x, l(1)
   1: and r0.x, r0.x, l(2)
   2: and r0.w, v0.x, l(2)
   3: utof r0.xy, r0.xwxx
   4: mad o0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: add r0.z, -r0.y, l(1.000000)
   6: mad o1.xy, r0.xzxx, cb0[127].xyxx, cb0[127].zwzz
   7: mov o0.zw, l(0,0,1.000000,1.000000)
   8: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 51 math, 7 temp registers
Set 2D Texture "_BlitTexture" to slot 0 sampler slot -1

Set Sampler LinearClamp to slot 0

Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector2 _GlobalMipBias at 80
  Vector4 _BlitTexture_TexelSize at 2112
  Vector4 _Params at 2144
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[135], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xyzw, cb0[132].xxxx, l(-0.500000, -0.500000, 0.500000, -0.500000), v1.xyxy
   1: sample_b r1.xyzw, r0.xyxx, t0.xyzw, s0, cb0[5].x
   2: sample_b r0.xyzw, r0.zwzz, t0.xyzw, s0, cb0[5].x
   3: add r0.xyz, r0.xyzx, r1.xyzx
   4: mad r1.xyzw, cb0[132].xxxx, l(-0.500000, 0.500000, 0.500000, 0.500000), v1.xyxy
   5: sample_b r2.xyzw, r1.xyxx, t0.xyzw, s0, cb0[5].x
   6: sample_b r1.xyzw, r1.zwzz, t0.xyzw, s0, cb0[5].x
   7: add r0.xyz, r0.xyzx, r2.xyzx
   8: add r0.xyz, r1.xyzx, r0.xyzx
   9: add r1.xy, v1.xyxx, -cb0[132].xxxx
  10: sample_b r1.xyzw, r1.xyxx, t0.xyzw, s0, cb0[5].x
  11: mad r2.xyzw, cb0[132].xxxx, l(0.000000, -1.000000, 1.000000, -1.000000), v1.xyxy
  12: sample_b r3.xyzw, r2.xyxx, t0.xyzw, s0, cb0[5].x
  13: sample_b r2.xyzw, r2.zwzz, t0.xyzw, s0, cb0[5].x
  14: add r2.xyz, r2.xyzx, r3.xyzx
  15: add r1.xyz, r1.xyzx, r3.xyzx
  16: sample_b r3.xyzw, v1.xyxx, t0.xyzw, s0, cb0[5].x
  17: add r1.xyz, r1.xyzx, r3.xyzx
  18: mad r4.xyzw, cb0[132].xxxx, l(-1.000000, 0.000000, -1.000000, 1.000000), v1.xyxy
  19: sample_b r5.xyzw, r4.xyxx, t0.xyzw, s0, cb0[5].x
  20: sample_b r4.xyzw, r4.zwzz, t0.xyzw, s0, cb0[5].x
  21: add r1.xyz, r1.xyzx, r5.xyzx
  22: add r5.xyz, r3.xyzx, r5.xyzx
  23: mul r1.xyz, r1.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000)
  24: mad r0.xyz, r0.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000), r1.xyzx
  25: mad r1.xyzw, cb0[132].xxxx, l(1.000000, 0.000000, 0.000000, 1.000000), v1.xyxy
  26: sample_b r6.xyzw, r1.xyxx, t0.xyzw, s0, cb0[5].x
  27: sample_b r1.xyzw, r1.zwzz, t0.xyzw, s0, cb0[5].x
  28: add r2.xyz, r2.xyzx, r6.xyzx
  29: add r6.xyz, r3.xyzx, r6.xyzx
  30: add r2.xyz, r3.xyzx, r2.xyzx
  31: mad r0.xyz, r2.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000), r0.xyzx
  32: add r2.xyz, r1.xyzx, r5.xyzx
  33: add r2.xyz, r4.xyzx, r2.xyzx
  34: mad r0.xyz, r2.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000), r0.xyzx
  35: add r2.xy, v1.xyxx, cb0[132].xxxx
  36: sample_b r2.xyzw, r2.xyxx, t0.xyzw, s0, cb0[5].x
  37: add r2.xyz, r2.xyzx, r6.xyzx
  38: add r1.xyz, r1.xyzx, r2.xyzx
  39: mad r0.xyz, r1.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000), r0.xyzx
  40: min r0.xyz, r0.xyzx, cb0[134].yyyy
  41: max r0.w, r0.y, r0.x
  42: max r0.w, r0.z, r0.w
  43: add r1.x, r0.w, -cb0[134].z
  44: max r0.w, r0.w, l(0.000100)
  45: add r1.y, r1.x, cb0[134].w
  46: max r1.y, r1.y, l(0.000000)
  47: add r1.z, cb0[134].w, cb0[134].w
  48: min r1.y, r1.z, r1.y
  49: mul r1.y, r1.y, r1.y
  50: mad r1.z, cb0[134].w, l(4.000000), l(0.000100)
  51: div r1.y, r1.y, r1.z
  52: max r1.x, r1.y, r1.x
  53: div r0.w, r1.x, r0.w
  54: mul r0.xyz, r0.wwww, r0.xyzx
  55: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: mul r0.xyz, r0.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000)
  57: max r0.w, r0.y, r0.x
  58: max r1.x, r0.z, l(0.000010)
  59: max r0.w, r0.w, r1.x
  60: mul r0.w, r0.w, l(255.000000)
  61: round_pi r0.w, r0.w
  62: mul r0.w, r0.w, l(0.003922)
  63: div o0.xyz, r0.xyzx, r0.wwww
  64: mov o0.w, r0.w
  65: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 6 math
 // Stats for Fragment shader:
 //        d3d11: 23 avg math (15..32)
 Pass {
  Name "Bloom Blur Horizontal"
  Tags { "RenderType"="Opaque" "RenderPipeline"="UniversalPipeline" }
  ZTest Always
  ZWrite Off
  Cull Off
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 6 math, 1 temp registers
Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector4 _BlitScaleBias at 2032
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[128], immediateIndexed
      dcl_input_sgv v0.x, vertex_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_temps 1
   0: ishl r0.x, v0.x, l(1)
   1: and r0.x, r0.x, l(2)
   2: and r0.w, v0.x, l(2)
   3: utof r0.xy, r0.xwxx
   4: mad o0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: add r0.z, -r0.y, l(1.000000)
   6: mad o1.xy, r0.xzxx, cb0[127].xyxx, cb0[127].zwzz
   7: mov o0.zw, l(0,0,1.000000,1.000000)
   8: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 15 math, 5 temp registers
Set 2D Texture "_BlitTexture" to slot 0 sampler slot -1

Set Sampler LinearClamp to slot 0

Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector2 _GlobalMipBias at 80
  Vector4 _BlitTexture_TexelSize at 2112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[133], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 5
   0: mul r0.xz, cb0[132].xxxx, l(8.000000, 0.000000, 6.000000, 0.000000)
   1: mov r0.yw, l(0,0,0,0)
   2: add r1.xyzw, -r0.xyzw, v1.xyxy
   3: add r0.xyzw, r0.zwxw, v1.xyxy
   4: sample_b r2.xyzw, r1.zwzz, t0.xyzw, s0, cb0[5].x
   5: sample_b r1.xyzw, r1.xyxx, t0.xyzw, s0, cb0[5].x
   6: mul r2.xyz, r2.xyzx, l(0.054054, 0.054054, 0.054054, 0.000000)
   7: mad r1.xyz, r1.xyzx, l(0.016216, 0.016216, 0.016216, 0.000000), r2.xyzx
   8: mul r2.xz, cb0[132].xxxx, l(4.000000, 0.000000, 2.000000, 0.000000)
   9: mov r2.yw, l(0,0,0,0)
  10: add r3.xyzw, -r2.xyzw, v1.xyxy
  11: add r2.xyzw, r2.zwxy, v1.xyxy
  12: sample_b r4.xyzw, r3.xyxx, t0.xyzw, s0, cb0[5].x
  13: sample_b r3.xyzw, r3.zwzz, t0.xyzw, s0, cb0[5].x
  14: mad r1.xyz, r4.xyzx, l(0.121622, 0.121622, 0.121622, 0.000000), r1.xyzx
  15: mad r1.xyz, r3.xyzx, l(0.194595, 0.194595, 0.194595, 0.000000), r1.xyzx
  16: sample_b r3.xyzw, v1.xyxx, t0.xyzw, s0, cb0[5].x
  17: mad r1.xyz, r3.xyzx, l(0.227027, 0.227027, 0.227027, 0.000000), r1.xyzx
  18: sample_b r3.xyzw, r2.xyxx, t0.xyzw, s0, cb0[5].x
  19: sample_b r2.xyzw, r2.zwzz, t0.xyzw, s0, cb0[5].x
  20: mad r1.xyz, r3.xyzx, l(0.194595, 0.194595, 0.194595, 0.000000), r1.xyzx
  21: mad r1.xyz, r2.xyzx, l(0.121622, 0.121622, 0.121622, 0.000000), r1.xyzx
  22: sample_b r2.xyzw, r0.xyxx, t0.xyzw, s0, cb0[5].x
  23: sample_b r0.xyzw, r0.zwzz, t0.xyzw, s0, cb0[5].x
  24: mad r1.xyz, r2.xyzx, l(0.054054, 0.054054, 0.054054, 0.000000), r1.xyzx
  25: mad o0.xyz, r0.xyzx, l(0.016216, 0.016216, 0.016216, 0.000000), r1.xyzx
  26: mov o0.w, l(1.000000)
  27: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: _USE_RGBM
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 6 math, 1 temp registers
Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector4 _BlitScaleBias at 2032
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[128], immediateIndexed
      dcl_input_sgv v0.x, vertex_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_temps 1
   0: ishl r0.x, v0.x, l(1)
   1: and r0.x, r0.x, l(2)
   2: and r0.w, v0.x, l(2)
   3: utof r0.xy, r0.xwxx
   4: mad o0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: add r0.z, -r0.y, l(1.000000)
   6: mad o1.xy, r0.xzxx, cb0[127].xyxx, cb0[127].zwzz
   7: mov o0.zw, l(0,0,1.000000,1.000000)
   8: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 5 temp registers
Set 2D Texture "_BlitTexture" to slot 0 sampler slot -1

Set Sampler LinearClamp to slot 0

Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector2 _GlobalMipBias at 80
  Vector4 _BlitTexture_TexelSize at 2112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[133], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 5
   0: mul r0.xz, cb0[132].xxxx, l(8.000000, 0.000000, 6.000000, 0.000000)
   1: mov r0.yw, l(0,0,0,0)
   2: add r1.xyzw, -r0.xyzw, v1.xyxy
   3: add r0.xyzw, r0.zwxw, v1.xyxy
   4: sample_b r2.xyzw, r1.zwzz, t0.xyzw, s0, cb0[5].x
   5: sample_b r1.xyzw, r1.xyxx, t0.xyzw, s0, cb0[5].x
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: mul r2.xyz, r2.wwww, r2.xyzx
   8: mul r2.xyz, r2.xyzx, l(0.432432, 0.432432, 0.432432, 0.000000)
   9: mad r1.xyz, r1.xyzx, l(0.129730, 0.129730, 0.129730, 0.000000), r2.xyzx
  10: mul r2.xz, cb0[132].xxxx, l(4.000000, 0.000000, 2.000000, 0.000000)
  11: mov r2.yw, l(0,0,0,0)
  12: add r3.xyzw, -r2.xyzw, v1.xyxy
  13: add r2.xyzw, r2.zwxy, v1.xyxy
  14: sample_b r4.xyzw, r3.xyxx, t0.xyzw, s0, cb0[5].x
  15: sample_b r3.xyzw, r3.zwzz, t0.xyzw, s0, cb0[5].x
  16: mul r3.xyz, r3.wwww, r3.xyzx
  17: mul r4.xyz, r4.wwww, r4.xyzx
  18: mad r1.xyz, r4.xyzx, l(0.972973, 0.972973, 0.972973, 0.000000), r1.xyzx
  19: mad r1.xyz, r3.xyzx, l(1.556757, 1.556757, 1.556757, 0.000000), r1.xyzx
  20: sample_b r3.xyzw, v1.xyxx, t0.xyzw, s0, cb0[5].x
  21: mul r3.xyz, r3.wwww, r3.xyzx
  22: mad r1.xyz, r3.xyzx, l(1.816216, 1.816216, 1.816216, 0.000000), r1.xyzx
  23: sample_b r3.xyzw, r2.xyxx, t0.xyzw, s0, cb0[5].x
  24: sample_b r2.xyzw, r2.zwzz, t0.xyzw, s0, cb0[5].x
  25: mul r2.xyz, r2.wwww, r2.xyzx
  26: mul r3.xyz, r3.wwww, r3.xyzx
  27: mad r1.xyz, r3.xyzx, l(1.556757, 1.556757, 1.556757, 0.000000), r1.xyzx
  28: mad r1.xyz, r2.xyzx, l(0.972973, 0.972973, 0.972973, 0.000000), r1.xyzx
  29: sample_b r2.xyzw, r0.xyxx, t0.xyzw, s0, cb0[5].x
  30: sample_b r0.xyzw, r0.zwzz, t0.xyzw, s0, cb0[5].x
  31: mul r0.xyz, r0.wwww, r0.xyzx
  32: mul r2.xyz, r2.wwww, r2.xyzx
  33: mad r1.xyz, r2.xyzx, l(0.432432, 0.432432, 0.432432, 0.000000), r1.xyzx
  34: mad r0.xyz, r0.xyzx, l(0.129730, 0.129730, 0.129730, 0.000000), r1.xyzx
  35: mul r0.xyz, r0.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000)
  36: max r0.w, r0.y, r0.x
  37: max r1.x, r0.z, l(0.000010)
  38: max r0.w, r0.w, r1.x
  39: mul r0.w, r0.w, l(255.000000)
  40: round_pi r0.w, r0.w
  41: mul r0.w, r0.w, l(0.003922)
  42: div o0.xyz, r0.xyzx, r0.wwww
  43: mov o0.w, r0.w
  44: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 6 math
 // Stats for Fragment shader:
 //        d3d11: 14 avg math (8..21)
 Pass {
  Name "Bloom Blur Vertical"
  Tags { "RenderType"="Opaque" "RenderPipeline"="UniversalPipeline" }
  ZTest Always
  ZWrite Off
  Cull Off
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 6 math, 1 temp registers
Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector4 _BlitScaleBias at 2032
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[128], immediateIndexed
      dcl_input_sgv v0.x, vertex_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_temps 1
   0: ishl r0.x, v0.x, l(1)
   1: and r0.x, r0.x, l(2)
   2: and r0.w, v0.x, l(2)
   3: utof r0.xy, r0.xwxx
   4: mad o0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: add r0.z, -r0.y, l(1.000000)
   6: mad o1.xy, r0.xzxx, cb0[127].xyxx, cb0[127].zwzz
   7: mov o0.zw, l(0,0,1.000000,1.000000)
   8: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 8 math, 3 temp registers
Set 2D Texture "_BlitTexture" to slot 0 sampler slot -1

Set Sampler LinearClamp to slot 0

Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector2 _GlobalMipBias at 80
  Vector4 _BlitTexture_TexelSize at 2112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[133], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 3
   0: mov r0.x, l(0)
   1: mul r0.yw, cb0[132].yyyy, l(0.000000, 3.230769, 0.000000, 1.384615)
   2: add r1.xyzw, -r0.xyxw, v1.xyxy
   3: add r0.xyzw, r0.xwxy, v1.xyxy
   4: sample_b r2.xyzw, r1.zwzz, t0.xyzw, s0, cb0[5].x
   5: sample_b r1.xyzw, r1.xyxx, t0.xyzw, s0, cb0[5].x
   6: mul r2.xyz, r2.xyzx, l(0.316216, 0.316216, 0.316216, 0.000000)
   7: mad r1.xyz, r1.xyzx, l(0.070270, 0.070270, 0.070270, 0.000000), r2.xyzx
   8: sample_b r2.xyzw, v1.xyxx, t0.xyzw, s0, cb0[5].x
   9: mad r1.xyz, r2.xyzx, l(0.227027, 0.227027, 0.227027, 0.000000), r1.xyzx
  10: sample_b r2.xyzw, r0.xyxx, t0.xyzw, s0, cb0[5].x
  11: sample_b r0.xyzw, r0.zwzz, t0.xyzw, s0, cb0[5].x
  12: mad r1.xyz, r2.xyzx, l(0.316216, 0.316216, 0.316216, 0.000000), r1.xyzx
  13: mad o0.xyz, r0.xyzx, l(0.070270, 0.070270, 0.070270, 0.000000), r1.xyzx
  14: mov o0.w, l(1.000000)
  15: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: _USE_RGBM
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 6 math, 1 temp registers
Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector4 _BlitScaleBias at 2032
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[128], immediateIndexed
      dcl_input_sgv v0.x, vertex_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_temps 1
   0: ishl r0.x, v0.x, l(1)
   1: and r0.x, r0.x, l(2)
   2: and r0.w, v0.x, l(2)
   3: utof r0.xy, r0.xwxx
   4: mad o0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: add r0.z, -r0.y, l(1.000000)
   6: mad o1.xy, r0.xzxx, cb0[127].xyxx, cb0[127].zwzz
   7: mov o0.zw, l(0,0,1.000000,1.000000)
   8: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 3 temp registers
Set 2D Texture "_BlitTexture" to slot 0 sampler slot -1

Set Sampler LinearClamp to slot 0

Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector2 _GlobalMipBias at 80
  Vector4 _BlitTexture_TexelSize at 2112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[133], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 3
   0: mov r0.x, l(0)
   1: mul r0.yw, cb0[132].yyyy, l(0.000000, 3.230769, 0.000000, 1.384615)
   2: add r1.xyzw, -r0.xyxw, v1.xyxy
   3: add r0.xyzw, r0.xwxy, v1.xyxy
   4: sample_b r2.xyzw, r1.zwzz, t0.xyzw, s0, cb0[5].x
   5: sample_b r1.xyzw, r1.xyxx, t0.xyzw, s0, cb0[5].x
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: mul r2.xyz, r2.wwww, r2.xyzx
   8: mul r2.xyz, r2.xyzx, l(2.529730, 2.529730, 2.529730, 0.000000)
   9: mad r1.xyz, r1.xyzx, l(0.562162, 0.562162, 0.562162, 0.000000), r2.xyzx
  10: sample_b r2.xyzw, v1.xyxx, t0.xyzw, s0, cb0[5].x
  11: mul r2.xyz, r2.wwww, r2.xyzx
  12: mad r1.xyz, r2.xyzx, l(1.816216, 1.816216, 1.816216, 0.000000), r1.xyzx
  13: sample_b r2.xyzw, r0.xyxx, t0.xyzw, s0, cb0[5].x
  14: sample_b r0.xyzw, r0.zwzz, t0.xyzw, s0, cb0[5].x
  15: mul r0.xyz, r0.wwww, r0.xyzx
  16: mul r2.xyz, r2.wwww, r2.xyzx
  17: mad r1.xyz, r2.xyzx, l(2.529730, 2.529730, 2.529730, 0.000000), r1.xyzx
  18: mad r0.xyz, r0.xyzx, l(0.562162, 0.562162, 0.562162, 0.000000), r1.xyzx
  19: mul r0.xyz, r0.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000)
  20: max r0.w, r0.y, r0.x
  21: max r1.x, r0.z, l(0.000010)
  22: max r0.w, r0.w, r1.x
  23: mul r0.w, r0.w, l(255.000000)
  24: round_pi r0.w, r0.w
  25: mul r0.w, r0.w, l(0.003922)
  26: div o0.xyz, r0.xyzx, r0.wwww
  27: mov o0.w, r0.w
  28: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 6 math
 // Stats for Fragment shader:
 //        d3d11: 23 avg math (2..45)
 Pass {
  Name "Bloom Upsample"
  Tags { "RenderType"="Opaque" "RenderPipeline"="UniversalPipeline" }
  ZTest Always
  ZWrite Off
  Cull Off
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 6 math, 1 temp registers
Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector4 _BlitScaleBias at 2032
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[128], immediateIndexed
      dcl_input_sgv v0.x, vertex_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_temps 1
   0: ishl r0.x, v0.x, l(1)
   1: and r0.x, r0.x, l(2)
   2: and r0.w, v0.x, l(2)
   3: utof r0.xy, r0.xwxx
   4: mad o0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: add r0.z, -r0.y, l(1.000000)
   6: mad o1.xy, r0.xzxx, cb0[127].xyxx, cb0[127].zwzz
   7: mov o0.zw, l(0,0,1.000000,1.000000)
   8: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 2 math, 2 temp registers
Set 2D Texture "_BlitTexture" to slot 0 sampler slot -1
Set 2D Texture "_SourceTexLowMip" to slot 1 sampler slot -1

Set Sampler LinearClamp to slot 0

Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector2 _GlobalMipBias at 80
  Vector4 _Params at 2144
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[135], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample_b r0.xyzw, v1.xyxx, t1.xyzw, s0, cb0[5].x
   1: sample_b r1.xyzw, v1.xyxx, t0.xyzw, s0, cb0[5].x
   2: add r0.xyz, r0.xyzx, -r1.xyzx
   3: mad o0.xyz, cb0[134].xxxx, r0.xyzx, r1.xyzx
   4: mov o0.w, l(1.000000)
   5: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: _BLOOM_HQ
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 6 math, 1 temp registers
Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector4 _BlitScaleBias at 2032
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[128], immediateIndexed
      dcl_input_sgv v0.x, vertex_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_temps 1
   0: ishl r0.x, v0.x, l(1)
   1: and r0.x, r0.x, l(2)
   2: and r0.w, v0.x, l(2)
   3: utof r0.xy, r0.xwxx
   4: mad o0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: add r0.z, -r0.y, l(1.000000)
   6: mad o1.xy, r0.xzxx, cb0[127].xyxx, cb0[127].zwzz
   7: mov o0.zw, l(0,0,1.000000,1.000000)
   8: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 34 math, 5 temp registers
Set 2D Texture "_BlitTexture" to slot 0 sampler slot -1
Set 2D Texture "_SourceTexLowMip" to slot 1 sampler slot -1

Set Sampler LinearClamp to slot 0

Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector2 _GlobalMipBias at 80
  Vector4 _SourceTexLowMip_TexelSize at 2128
  Vector4 _Params at 2144
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[135], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 5
   0: mad r0.xy, v1.xyxx, cb0[133].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: frc r0.zw, r0.xxxy
   2: round_ni r0.xy, r0.xyxx
   3: mad r1.xy, r0.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   4: mul r1.zw, r0.zzzw, r0.zzzw
   5: mad r1.xy, r1.zwzz, r1.xyxx, l(0.666667, 0.666667, 0.000000, 0.000000)
   6: add r1.zw, -r1.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
   7: mad r2.xyzw, -r0.zwzw, l(0.500000, 0.500000, 0.166667, 0.166667), l(0.500000, 0.500000, 0.500000, 0.500000)
   8: mad r2.xyzw, r0.zwzw, r2.xyzw, l(0.500000, 0.500000, -0.500000, -0.500000)
   9: mad r2.xyzw, r0.zwzw, r2.xyzw, l(0.166667, 0.166667, 0.166667, 0.166667)
  10: add r0.zw, r1.zzzw, -r2.xxxy
  11: add r0.zw, -r2.zzzw, r0.zzzw
  12: add r1.zw, r0.zzzw, r2.xxxy
  13: add r2.xy, r1.xyxx, r2.zwzz
  14: div r2.zw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.zzzw
  15: mad r3.xy, r0.zwzz, r2.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
  16: div r0.zw, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xxxy
  17: mad r3.zw, r1.xxxy, r0.zzzw, l(0.000000, 0.000000, -1.000000, -1.000000)
  18: add r4.xyzw, r0.xyxy, r3.zyxy
  19: add r0.xyzw, r0.xyxy, r3.zwxw
  20: add r0.xyzw, r0.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
  21: mul r0.xyzw, r0.xyzw, cb0[133].xyxy
  22: min r0.xyzw, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  23: add r3.xyzw, r4.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
  24: mul r3.xyzw, r3.xyzw, cb0[133].xyxy
  25: min r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  26: sample_l r4.xyzw, r3.zwzz, t1.xyzw, s0, l(0.000000)
  27: sample_l r3.xyzw, r3.xyxx, t1.xyzw, s0, l(0.000000)
  28: mul r4.xyz, r1.zzzz, r4.xyzx
  29: mad r3.xyz, r2.xxxx, r3.xyzx, r4.xyzx
  30: mul r1.xyw, r1.wwww, r3.xyxz
  31: sample_l r3.xyzw, r0.zwzz, t1.xyzw, s0, l(0.000000)
  32: sample_l r0.xyzw, r0.xyxx, t1.xyzw, s0, l(0.000000)
  33: mul r3.xyz, r1.zzzz, r3.xyzx
  34: mad r0.xyz, r2.xxxx, r0.xyzx, r3.xyzx
  35: mad r0.xyz, r2.yyyy, r0.xyzx, r1.xywx
  36: sample_b r1.xyzw, v1.xyxx, t0.xyzw, s0, cb0[5].x
  37: add r0.xyz, r0.xyzx, -r1.xyzx
  38: mad o0.xyz, cb0[134].xxxx, r0.xyzx, r1.xyzx
  39: mov o0.w, l(1.000000)
  40: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: _USE_RGBM
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 6 math, 1 temp registers
Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector4 _BlitScaleBias at 2032
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[128], immediateIndexed
      dcl_input_sgv v0.x, vertex_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_temps 1
   0: ishl r0.x, v0.x, l(1)
   1: and r0.x, r0.x, l(2)
   2: and r0.w, v0.x, l(2)
   3: utof r0.xy, r0.xwxx
   4: mad o0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: add r0.z, -r0.y, l(1.000000)
   6: mad o1.xy, r0.xzxx, cb0[127].xyxx, cb0[127].zwzz
   7: mov o0.zw, l(0,0,1.000000,1.000000)
   8: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 13 math, 2 temp registers
Set 2D Texture "_BlitTexture" to slot 0 sampler slot -1
Set 2D Texture "_SourceTexLowMip" to slot 1 sampler slot -1

Set Sampler LinearClamp to slot 0

Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector2 _GlobalMipBias at 80
  Vector4 _Params at 2144
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[135], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample_b r0.xyzw, v1.xyxx, t1.xyzw, s0, cb0[5].x
   1: mul r0.xyz, r0.wwww, r0.xyzx
   2: sample_b r1.xyzw, v1.xyxx, t0.xyzw, s0, cb0[5].x
   3: mul r1.xyz, r1.wwww, r1.xyzx
   4: mul r1.xyz, r1.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000)
   5: mad r0.xyz, r0.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000), -r1.xyzx
   6: mad r0.xyz, cb0[134].xxxx, r0.xyzx, r1.xyzx
   7: mul r0.xyz, r0.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000)
   8: max r0.w, r0.y, r0.x
   9: max r1.x, r0.z, l(0.000010)
  10: max r0.w, r0.w, r1.x
  11: mul r0.w, r0.w, l(255.000000)
  12: round_pi r0.w, r0.w
  13: mul r0.w, r0.w, l(0.003922)
  14: div o0.xyz, r0.xyzx, r0.wwww
  15: mov o0.w, r0.w
  16: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: _BLOOM_HQ _USE_RGBM
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 6 math, 1 temp registers
Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector4 _BlitScaleBias at 2032
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[128], immediateIndexed
      dcl_input_sgv v0.x, vertex_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_temps 1
   0: ishl r0.x, v0.x, l(1)
   1: and r0.x, r0.x, l(2)
   2: and r0.w, v0.x, l(2)
   3: utof r0.xy, r0.xwxx
   4: mad o0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: add r0.z, -r0.y, l(1.000000)
   6: mad o1.xy, r0.xzxx, cb0[127].xyxx, cb0[127].zwzz
   7: mov o0.zw, l(0,0,1.000000,1.000000)
   8: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 45 math, 5 temp registers
Set 2D Texture "_BlitTexture" to slot 0 sampler slot -1
Set 2D Texture "_SourceTexLowMip" to slot 1 sampler slot -1

Set Sampler LinearClamp to slot 0

Constant Buffer "$Globals" (2160 bytes) on slot 0 {
  Vector2 _GlobalMipBias at 80
  Vector4 _SourceTexLowMip_TexelSize at 2128
  Vector4 _Params at 2144
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[135], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_output o0.xyzw
      dcl_temps 5
   0: mad r0.xy, v1.xyxx, cb0[133].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: frc r0.zw, r0.xxxy
   2: round_ni r0.xy, r0.xyxx
   3: mad r1.xy, r0.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   4: mul r1.zw, r0.zzzw, r0.zzzw
   5: mad r1.xy, r1.zwzz, r1.xyxx, l(0.666667, 0.666667, 0.000000, 0.000000)
   6: add r1.zw, -r1.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
   7: mad r2.xyzw, -r0.zwzw, l(0.500000, 0.500000, 0.166667, 0.166667), l(0.500000, 0.500000, 0.500000, 0.500000)
   8: mad r2.xyzw, r0.zwzw, r2.xyzw, l(0.500000, 0.500000, -0.500000, -0.500000)
   9: mad r2.xyzw, r0.zwzw, r2.xyzw, l(0.166667, 0.166667, 0.166667, 0.166667)
  10: add r0.zw, r1.zzzw, -r2.xxxy
  11: add r0.zw, -r2.zzzw, r0.zzzw
  12: add r1.zw, r0.zzzw, r2.xxxy
  13: add r2.xy, r1.xyxx, r2.zwzz
  14: div r2.zw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.zzzw
  15: mad r3.xy, r0.zwzz, r2.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
  16: div r0.zw, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xxxy
  17: mad r3.zw, r1.xxxy, r0.zzzw, l(0.000000, 0.000000, -1.000000, -1.000000)
  18: add r4.xyzw, r0.xyxy, r3.zyxy
  19: add r0.xyzw, r0.xyxy, r3.zwxw
  20: add r0.xyzw, r0.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
  21: mul r0.xyzw, r0.xyzw, cb0[133].xyxy
  22: min r0.xyzw, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  23: add r3.xyzw, r4.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
  24: mul r3.xyzw, r3.xyzw, cb0[133].xyxy
  25: min r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  26: sample_l r4.xyzw, r3.zwzz, t1.xyzw, s0, l(0.000000)
  27: sample_l r3.xyzw, r3.xyxx, t1.xyzw, s0, l(0.000000)
  28: mul r4.xyzw, r1.zzzz, r4.xyzw
  29: mad r3.xyzw, r2.xxxx, r3.xyzw, r4.xyzw
  30: mul r3.xyzw, r1.wwww, r3.xyzw
  31: sample_l r4.xyzw, r0.zwzz, t1.xyzw, s0, l(0.000000)
  32: sample_l r0.xyzw, r0.xyxx, t1.xyzw, s0, l(0.000000)
  33: mul r1.xyzw, r1.zzzz, r4.xyzw
  34: mad r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw
  35: mad r0.xyzw, r2.yyyy, r0.xyzw, r3.xyzw
  36: mul r0.xyz, r0.wwww, r0.xyzx
  37: sample_b r1.xyzw, v1.xyxx, t0.xyzw, s0, cb0[5].x
  38: mul r1.xyz, r1.wwww, r1.xyzx
  39: mul r1.xyz, r1.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000)
  40: mad r0.xyz, r0.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000), -r1.xyzx
  41: mad r0.xyz, cb0[134].xxxx, r0.xyzx, r1.xyzx
  42: mul r0.xyz, r0.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000)
  43: max r0.w, r0.y, r0.x
  44: max r1.x, r0.z, l(0.000010)
  45: max r0.w, r0.w, r1.x
  46: mul r0.w, r0.w, l(255.000000)
  47: round_pi r0.w, r0.w
  48: mul r0.w, r0.w, l(0.003922)
  49: div o0.xyz, r0.xyzx, r0.wwww
  50: mov o0.w, r0.w
  51: ret 
// Approximately 0 instruction slots used


 }
}
}
